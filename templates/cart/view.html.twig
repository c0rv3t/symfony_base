{% extends 'base.html.twig' %}

{% block title %}{{ "title.cart" | trans }}{% endblock %}

{% block body %}
<div class="container text-center my-5">
    {% for type, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ type }}">
                {{ message }}
            </div>
        {% endfor %}
    {% endfor %}

    <h1>{{ "cart.yourOrder" | trans }}:</h1>

    {% if order %}
        {% if order.orderItem is not empty %}
            <div class="row justify-content-center">
                <div class="col-12">
                    <table class="table table-striped table-responsive-lg my-3">
                        <thead class="thead-dark">
                            <tr>
                                <th>{{ "cart.product" | trans }}</th>
                                <th>{{ "cart.price" | trans }}</th>
                                <th>{{ "cart.quantity" | trans }}</th>
                                <th>{{ "cart.stock" | trans }}</th>
                                <th>{{ "cart.status" | trans }}</th>
                                <th>{{ "cart.total" | trans }}</th>
                                <th>{{ "cart.delete" | trans }}</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for item in order.orderItem %}
                                <tr>
                                    <td>{{ item.product.name }}</td>
                                    <td>{{ item.productPrice }} €</td>
                                    <td>
                                        {% if item.product.status.toString() != "Out of stock" %}
                                            <input type="number" min="1" max="{{ item.product.stock }}" data-id="{{ item.id }}" value="{{ item.quantity }}" class="quantity-input"/>
                                        {% else %}
                                            0
                                        {% endif %}
                                    </td>
                                    <td>{{ item.product.stock }}</td>
                                    <td>
                                        {% if item.product.status.toString() == "Available" %}
                                            {{ "product.available" | trans }}
                                        {% elseif item.product.status.toString() == "Preorder" %}
                                            {{ "product.preorder" | trans }}
                                        {% elseif item.product.status.toString() == "Out of stock" %}
                                            {{ "product.out" | trans }}
                                        {% endif %}
                                    </td>
                                    <td>{{ item.productPrice * item.quantity }} €</td>
                                    <td>
                                        <form action="{{ path('order_item_delete', { id: item.id }) }}" method="POST" class="d-inline">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete_order_item' ~ item.id) }}">
                                            <button type="submit" class="btn btn-link p-0" style="border: none; background: none;" onclick="return confirm('Do you want to remove the selected product from your cart?');">
                                                <img src="{{ asset('/img/bin.png') }}" alt="{{ 'cart.delete' | trans }}" style="height: 24px; width: 24px;">
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                    <h3>{{ "cart.totalPrice" | trans }}: {{ total }} €</h3>
                </div>
            </div>
        {% endif %}

        {% if order.status.toString() == 'Pending' %}
            <div class="row d-flex justify-content-center">
                <div class="col-6 col-md-4 col-lg-3 col-xl-2">
                    <form action="{{ path('cart_pay') }}" method="POST">
                        <input type="hidden" name="_token" value="{{ csrf_token('cart_pay') }}">
                        <button type="submit" class="btn btn-success">{{ "cart.pay" | trans }}</button>
                    </form>
                </div>
                <div class="col-6 col-md-4 col-lg-3 col-xl-2">
                    <form action="{{ path('order_cancel', { id: order.id }) }}" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to cancel this order?');">{{ "cart.cancel" | trans }}</button>
                    </form>
                </div>
            </div>
        {% endif %}
    {% else %}
        <h2 class="mt-5">{{ "cart.emptyOrder" | trans }}</h2>
        <p>{{ "cart.toOrder" | trans }}</p>
    {% endif %}
</div>
<script>
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', function () {
            const itemId = this.dataset.id;
            const newQuantity = parseInt(this.value);
            const maxQuantity = parseInt(this.max);
            const minQuantity = parseInt(this.min);

            if (newQuantity < minQuantity || newQuantity > maxQuantity) {
                alert(`Please enter a quantity between ${minQuantity} and ${maxQuantity}.`);
                this.value = Math.min(Math.max(newQuantity, minQuantity), maxQuantity);
                return;
            }

            fetch(`/cart/update/${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({ quantity: newQuantity })
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Failed to update the quantity.');
            })
            .catch(error => console.error(error));
        });
    });
</script>
{% endblock %}